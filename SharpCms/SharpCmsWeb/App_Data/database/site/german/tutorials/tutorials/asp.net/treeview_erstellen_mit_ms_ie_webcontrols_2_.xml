<?xml version="1.0" encoding="utf-8"?>
<page>
  <attributes>
    <pagename>TreeView erstellen mit MS IE Webcontrols (2)</pagename>
    <name>treeview_erstellen_mit_ms_ie_webcontrols_2_</name>
    <menuname>TreeView_ 2</menuname>
    <pageidentifier>german/tutorials/tutorials/asp.net/treeview_erstellen_mit_ms_ie_webcontrols_2_</pageidentifier>
    <status>open</status>
    <lastedited>27.11.2003</lastedited>
    <metadescription>Erstellen eines TreeViews mit Daten aus der Datenbank. In diesem Tutorial kommen die Angeben für dei Icons ebenfalls aus der Datenbank.</metadescription>
    <metakeywords>TreeView, Microsoft.Web.UI.WebControls.TreeView, asp.net, vb.net, TreeNode</metakeywords>
  </attributes>
  <containers>
    <container name="content">
      <elements>
        <element type="header">
          <text>TreeView erstellen mit MS IE Webcontrols (2)</text>
          <headerstyle>Header1</headerstyle>
          <offset>2 lines</offset>
        </element>
        <element type="freetext">
          <text>&lt;h2&gt;Icons zum TreeView hinzufügen&lt;/h2&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;Autor: Jürgen Gutsch&lt;/p&gt;
&lt;p&gt;Version: 1.0&lt;/p&gt;
&lt;p&gt;Sprache: vb.net&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;h3&gt;Benötigt werden (mindestens):&lt;/h3&gt;
&lt;p&gt;.net Framework 1.0&lt;/p&gt;
&lt;p&gt;MS IE Webcontrols&lt;/p&gt;
&lt;p&gt;IIS 5.x&lt;/p&gt;
&lt;p&gt;IE 5.5&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;h3&gt;Getestet auf:&lt;/h3&gt;
&lt;p&gt;WinXP&lt;/p&gt;
&lt;p&gt;IIS 5.1&lt;/p&gt;
&lt;p&gt;IE 6.0&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;h3&gt;Grundlage:&lt;/h3&gt;
&lt;p&gt;Dieser Artikel basiert auf folgendem Tutorial:&lt;/p&gt;
&lt;p&gt;&lt;a href="show/german/tutorials/asp.net/treeview_erstellen_mit_ms_ie_webcontrols/default.aspx" class="text"&gt;TreeView erstellen mit MS IE Webcontrols&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;Auf einer Anregung eines Webmasters, der Teil 1 des Artikels erfolgreich eingesetzt hat (&lt;a href="http://www.bueroedv.de/" class="text" target="_blank"&gt;http://www.bueroedv.de/&lt;/a&gt;), hin habe ich mich entschlossen einen zweiten Teil zu schreiben, in dem es darum geht dem TreeView Icons hinzuzufügen. Icons (Symbole) deinen auch der &amp;Uuml;bersicht und der Strukturierung vin Menüs, sind aber in erster linie EyeCatcher (Blickfänger), die das beschreiben solten, was sich hinter dem Menüpunkt verbirgt.&lt;/p&gt;
&lt;p&gt;Im ersten teil hatte ich eine kleine Datenbank angelegt, in der die Menüstruktur abgebildet ist. die Tabelle ("Menu") enthielt den Linktext und evtl eine Url (je nachdem, ob es sich um einen weiterführenden Link handelte, oder um eine Art Verzeichnis, das weitere Links enthielt).&lt;/p&gt;
&lt;p&gt;Der Progammcode ist die Tabelle rekursiv durchgegangen, anhand der Spalte "m_parent" habe ich festgelegt, welcher Menüpunk einem anderen untergeordnet ist.&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;h3&gt;Die Datenbank:&lt;/h3&gt;
&lt;p&gt;Die gleiche Datenbanktabelle, wie in Teil eins, habe ich um drei Spalten erweitert:&lt;/p&gt;
&lt;p&gt;&lt;b&gt;m_target&lt;/b&gt;: zur besseren Steuerung von weiterführenden Links&lt;/p&gt;
&lt;p&gt;&lt;b&gt;m_open_img&lt;/b&gt;: hier wird das Icon gespeichert, welches angezeigt werden soll, wenn ein TreeNode geöffnet ist&lt;/p&gt;
&lt;p&gt;&lt;b&gt;m_close_img&lt;/b&gt;: enthält das standartsymbol, bzw. das Symbol des geschlossenen Treenodes.&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&lt;img src="default.aspx?process=download/files/pictures/tutorials/asp.net/_accesstable2.gif" width="465" height="385" border="0" /&gt;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;h3&gt;Der Code:&lt;/h3&gt;
&lt;p&gt;Die Hauptänderungen haben in der rekursiven Funktion "getMeTreeView" stattgefunden. Hier habe ich drei neue Variablen definiert (strTarget, strOpenImg und strCloseImg), welche die Werte aus der Datenbank enthalten werden. Innerhalb der Schleife verden erst die Variablen gefüllt und anschließend nach prürung des Variableninhalts werden die Eigenschaften "Target", "ImageUrl" und "ExpandedImageUrl" des aktuellen treeNodes gesetzt ("ImageUrl" setzt das Standartsymbol und "ExpandedImageUrl" das Symbol eines geöffneten Treenodes)&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;Hier noch einmal die komplette Funktion:&lt;/p&gt;
&lt;pre&gt;
&lt;span style="color:#0000FF"&gt;Function&lt;&lt;/span&gt; getMeTreeView( _
        &lt;span style="color:#0000FF"&gt;ByRef&lt;&lt;/span&gt; TreeNode &lt;span style="color:#0000FF"&gt;As&lt;&lt;/span&gt; Microsoft.Web.UI.WebControls.TreeNode, _
        &lt;span style="color:#0000FF"&gt;ByRef&lt;&lt;/span&gt; DataSet &lt;span style="color:#0000FF"&gt;As&lt;&lt;/span&gt; System.Data.DataSet, _
        &lt;span style="color:#0000FF"&gt;ByVal&lt;&lt;/span&gt; parentID &lt;span style="color:#0000FF"&gt;As&lt;&lt;/span&gt; Integer) _
                &lt;span style="color:#0000FF"&gt;As&lt;&lt;/span&gt; Microsoft.Web.UI.WebControls.TreeNode

  &lt;span style="color:#0000FF"&gt;Dim&lt;&lt;/span&gt; tn &lt;span style="color:#0000FF"&gt;As&lt;&lt;/span&gt; Microsoft.Web.UI.WebControls.TreeNode
  
  &lt;span style="color:#009900"&gt;' &gt;&gt;&gt;&gt;&gt; Folgendes Statement füllt ein DataRow-Array mit&lt;&lt;/span&gt;
  &lt;span style="color:#009900"&gt;' &gt;&gt;&gt;&gt;&gt; allen Daten aus dem DataSet, bei denen die "m_parent&lt;&lt;/span&gt;"
  &lt;span style="color:#009900"&gt;' &gt;&gt;&gt;&gt;&gt; der als Parameter übergebene ParentID entspricht&lt;&lt;/span&gt;
  &lt;span style="color:#0000FF"&gt;Dim&lt;&lt;/span&gt; dr() &lt;span style="color:#0000FF"&gt;As&lt;&lt;/span&gt; System.Data.DataRow = _
        DataSet.Tables("MENU").Select("m_parent=" &amp; parentID)

  &lt;span style="color:#009900"&gt;' &gt;&gt;&gt;&gt;&gt; Variablen für die TreeNodes:&lt;&lt;/span&gt;
  &lt;span style="color:#0000FF"&gt;Dim&lt;&lt;/span&gt; strText &lt;span style="color:#0000FF"&gt;As String&lt;&lt;/span&gt;
  &lt;span style="color:#0000FF"&gt;Dim&lt;&lt;/span&gt; strLink &lt;span style="color:#0000FF"&gt;As String&lt;&lt;/span&gt;
  &lt;span style="color:#0000FF"&gt;Dim&lt;&lt;/span&gt; strTarget &lt;span style="color:#0000FF"&gt;As String&lt;&lt;/span&gt;
  &lt;span style="color:#0000FF"&gt;Dim&lt;&lt;/span&gt; strOpenImg &lt;span style="color:#0000FF"&gt;As String&lt;&lt;/span&gt;
  &lt;span style="color:#0000FF"&gt;Dim&lt;&lt;/span&gt; strCloseImg &lt;span style="color:#0000FF"&gt;As String&lt;&lt;/span&gt;
  &lt;span style="color:#0000FF"&gt;Dim&lt;&lt;/span&gt; intId &lt;span style="color:#0000FF"&gt;As Integer&lt;&lt;/span&gt;

  &lt;span style="color:#009900"&gt;' &gt;&gt;&gt;&gt;&gt; Zähler für die For-Schleife:&lt;&lt;/span&gt;
  &lt;span style="color:#0000FF"&gt;Dim&lt;&lt;/span&gt; i &lt;span style="color:#0000FF"&gt;As Integer&lt;&lt;/span&gt;
  &lt;span style="color:#009900"&gt;' &gt;&gt;&gt;&gt;&gt; Diese Schleife geht alle Daten im DataRow-Array durch:&lt;&lt;/span&gt;
  &lt;span style="color:#0000FF"&gt;For&lt;&lt;/span&gt; i = 0 &lt;span style="color:#0000FF"&gt;to&lt;&lt;/span&gt; dr.Length -1
    &lt;span style="color:#009900"&gt;' &gt;&gt;&gt;&gt;&gt; TreeNode Text:&lt;&lt;/span&gt;
    strText = dr(i).Item("m_text").ToString
    &lt;span style="color:#009900"&gt;' &gt;&gt;&gt;&gt;&gt; TreeNode Link:&lt;&lt;/span&gt;
    strLink = dr(i).Item("m_link").ToString
    &lt;span style="color:#009900"&gt;' &gt;&gt;&gt;&gt;&gt; TreeNode Target:&lt;&lt;/span&gt;
    strTarget = dr(i).Item("m_target").ToString
    &lt;span style="color:#009900"&gt;' &gt;&gt;&gt;&gt;&gt; TreeNodeIcon - für geönneten TreeNode:&lt;&lt;/span&gt;
    strOpenImg = dr(i).Item("m_open_img").ToString
    &lt;span style="color:#009900"&gt;' &gt;&gt;&gt;&gt;&gt; TreeNodeIcon - für geschlossenen TreeNode:&lt;&lt;/span&gt;
    strCloseImg = dr(i).Item("m_close_img").ToString
    &lt;span style="color:#009900"&gt;' &gt;&gt;&gt;&gt;&gt; ID des TreeNodes:&lt;&lt;/span&gt;
    intId = dr(i).Item("m_id")

    &lt;span style="color:#009900"&gt;' &gt;&gt;&gt;&gt;&gt; neues TreeNode erzeugen:&lt;&lt;/span&gt;
    tn = &lt;span style="color:#0000FF"&gt;New&lt;&lt;/span&gt; Microsoft.Web.UI.WebControls.TreeNode
    &lt;span style="color:#009900"&gt;' &gt;&gt;&gt;&gt;&gt; id Setzen:&lt;&lt;/span&gt;
    tn.ID = intId
    &lt;span style="color:#009900"&gt;' &gt;&gt;&gt;&gt;&gt; Text setzen:&lt;&lt;/span&gt;
    tn.Text = strText
    &lt;span style="color:#009900"&gt;' &gt;&gt;&gt;&gt;&gt; Link setzen, wenn vorhanden:&lt;&lt;/span&gt;
    &lt;span style="color:#0000FF"&gt;If&lt;&lt;/span&gt; strLink &lt;&gt; "-" &lt;span style="color:#0000FF"&gt;Then&lt;&lt;/span&gt; tn.NavigateUrl = strLink
    &lt;span style="color:#009900"&gt;' &gt;&gt;&gt;&gt;&gt; Target setzen, wenn vorhanden:&lt;&lt;/span&gt;
    &lt;span style="color:#0000FF"&gt;If&lt;&lt;/span&gt; strTarget &lt;&gt; "-" Then tn.Target = strTarget
    &lt;span style="color:#009900"&gt;' &gt;&gt;&gt;&gt;&gt; offenes Icon setzen, wenn vorhanden:&lt;&lt;/span&gt;
    &lt;span style="color:#0000FF"&gt;If&lt;&lt;/span&gt; strOpenImg &lt;&gt; "-" &lt;span style="color:#0000FF"&gt;Then&lt;&lt;/span&gt; _
                tn.ExpandedImageUrl = imgFolder &amp; strOpenImg
    &lt;span style="color:#009900"&gt;' &gt;&gt;&gt;&gt;&gt; geschlossenes Icon setzen, wenn vorhanden:&lt;&lt;/span&gt;
    &lt;span style="color:#0000FF"&gt;If&lt;&lt;/span&gt; strCloseImg &lt;&gt; "-" &lt;span style="color:#0000FF"&gt;Then&lt;&lt;/span&gt; _
                tn.ImageUrl = imgFolder &amp; strCloseImg
	
    &lt;span style="color:#009900"&gt;' &gt;&gt;&gt;&gt;&gt; Schriftart und -Größe Setzen:&lt;&lt;/span&gt;
    tn.DefaultStyle.Add("font-family", "arial")
    tn.DefaultStyle.Add("font-size", "11px")

    &lt;span style="color:#009900"&gt;' &gt;&gt;&gt;&gt;&gt; rekursiver Aufruf dieser Sub, wobei die Aktuelle&lt;&lt;/span&gt; 
    &lt;span style="color:#009900"&gt;' &gt;&gt;&gt;&gt;&gt; ID als neue parendID übergeben wird:&lt;&lt;/span&gt;
    getMeTreeView(tn, DataSet, intId)
	
    &lt;span style="color:#009900"&gt;' &gt;&gt;&gt;&gt;&gt; als letztes wird das eben erzeugte TreeNode dem&lt;&lt;/span&gt;
    &lt;span style="color:#009900"&gt;' &gt;&gt;&gt;&gt;&gt; dem übergebenen hinzugefügt:&lt;&lt;/span&gt;
    TreeNode.Nodes.Add(tn)
  &lt;span style="color:#0000FF"&gt;Next&lt;&lt;/span&gt;
&lt;span style="color:#0000FF"&gt;End Function&lt;&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;Eine weitere kleine Änderung ist auch in der Sub "Page_Load" zu finden, da ich dem RootNode ebenfalls ein kleines Icon verpassen wolte:&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;pre&gt;
...
&lt;span style="color:#009900"&gt;' &gt;&gt;&gt;&gt;&gt; neues TreeNode erzeugen:&lt;&lt;/span&gt;
&lt;span style="color:#0000FF"&gt;Dim&lt;&lt;/span&gt; tn &lt;span style="color:#0000FF"&gt;As New&lt;&lt;/span&gt; Microsoft.Web.UI.WebControls.TreeNode

&lt;span style="color:#009900"&gt;' &gt;&gt;&gt;&gt;&gt; ID Setzen:&lt;&lt;/span&gt;
tn.ID = 0
&lt;span style="color:#009900"&gt;' &gt;&gt;&gt;&gt;&gt; Text setzen&lt;&lt;/span&gt;
tn.Text = "ROOT"
&lt;span style="color:#009900"&gt;' &gt;&gt;&gt;&gt;&gt; Scriftformat&lt;&lt;/span&gt;
tn.ExpandedImageUrl = imgFolder &amp; "home.gif"
&lt;span style="color:#009900"&gt;' &gt;&gt;&gt;&gt;&gt; &lt;&lt;/span&gt;&lt;span style="color:#009900"&gt;offenes Icon setzen&lt;&lt;/span&gt;
tn.ImageUrl = imgFolder &amp; "home.gif"
&lt;span style="color:#009900"&gt;' &gt;&gt;&gt;&gt;&gt; &lt;&lt;/span&gt;&lt;span style="color:#009900"&gt;geschlossenes Icon setzen&lt;&lt;/span&gt;
tn.DefaultStyle.Add("font-family", "arial")
tn.DefaultStyle.Add("font-size", "11px")

&lt;span style="color:#009900"&gt;' &gt;&gt;&gt;&gt;&gt; Rekursion aufrufen und Untergeordnete Nodes erzeugen:&lt;&lt;/span&gt;
getMeTreeView(tn, getDataSet(), 0)
			
&lt;span style="color:#009900"&gt;' &gt;&gt;&gt;&gt;&gt; TreeNode mit untergeordneten Nodes&lt;&lt;/span&gt; 
&lt;span style="color:#009900"&gt;' &gt;&gt;&gt;&gt;&gt; dem TreeView hinzufügen&lt;&lt;/span&gt;
tv.Nodes.Add(tn)
...
&lt;/pre&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;Die Variable "imgFolder", die in beiden Funktionen ebenfalls neu ist, enthält den Pfad zum Verzeichnis, in dem die Icons zu finden sind und ist gleich am Anfang des &amp;lt;script&amp;gt;-Blocks definiert:&lt;/p&gt;
&lt;pre&gt;
&lt;span style="color:#009900"&gt;' &amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt; DatenBank ConnectionString;&lt;&lt;/span&gt;
&lt;span style="color:#0000FF"&gt;Dim&lt;&lt;/span&gt; DS &lt;span style="color:#0000FF"&gt;As String&lt;&lt;/span&gt; = "Provider=Microsoft.Jet.OLEDB.4.0;Data Source=" _
                                        &amp;amp; &lt;b&gt;Server&lt;/b&gt;.MapPath("test.mdb")
&lt;span style="color:#009900"&gt;' &amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt; Pfad zum Symbolverzeichnis;&lt;&lt;/span&gt;
&lt;span style="color:#0000FF"&gt;Dim&lt;&lt;/span&gt; imgFolder &lt;span style="color:#0000FF"&gt;As String&lt;&lt;/span&gt; = "treeviewimages/"
&lt;/pre&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;Nachdem die Änderungen gemacht sind, sind nun folgende Bilder zu bewundern:&lt;/p&gt;
&lt;p&gt;&lt;img src="default.aspx?process=download/files/pictures/tutorials/asp.net/_menus2.gif" width="500" height="350" border="0" /&gt;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;Hier die Sourcen:&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Donwload: &lt;a href="default.aspx?process=download/files/documents/_treeview02.zip&amp;download=true" class="text"&gt;treeview02.zip (68 KB)&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;</text>
        </element>
      </elements>
    </container>
  </containers>
</page>